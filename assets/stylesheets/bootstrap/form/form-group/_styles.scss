@import "bootstrap/base/color/variables";
@import "bootstrap/base/cursor/variables";
@import "bootstrap/base/font-size/variables";
@import "bootstrap/base/line-height/variables";
@import "bootstrap/base/padding/variables";
@import "bootstrap/form/input/variables";
@import "variables";
@import "mixins";

// Component

.form-group {
  margin-bottom: $form-group-margin-bottom;
}

// Modificators

// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.
.form-group-sm {
  .form-control {
    border-radius: $input-border-radius-small;
    font-size: $base-sm-font-size;
    height: $input-height-small;
    line-height: $line-height-small;
    padding: $padding-small-vertical $padding-small-horizontal;
  }

  select.form-control {
    height: $input-height-small;
    line-height: $input-height-small;
  }

  textarea.form-control,
  select[multiple].form-control {
    height: auto;
  }

  .form-control-static {
    font-size: $base-sm-font-size;
    height: $input-height-small;
    line-height: $line-height-small;
    min-height: ($line-height-computed + $base-sm-font-size);
    padding: ($padding-small-vertical + 1) $padding-small-horizontal;
  }
}

.form-group-lg {
  .form-control {
    border-radius: $input-border-radius-large;
    font-size: $base-lg-font-size;
    height: $input-height-large;
    line-height: $line-height-large;
    padding: $padding-large-vertical $padding-large-horizontal;
  }

  select.form-control {
    height: $input-height-large;
    line-height: $input-height-large;
  }

  textarea.form-control,
  select[multiple].form-control {
    height: auto;
  }

  .form-control-static {
    font-size: $base-lg-font-size;
    height: $input-height-large;
    line-height: $line-height-large;
    min-height: ($line-height-computed + $base-lg-font-size);
    padding: ($padding-large-vertical + 1) $padding-large-horizontal;
  }
}

.radio,
.checkbox {
  display: block;
  margin-bottom: 10px;
  margin-top: 10px;
  position: relative;

  label {
    cursor: pointer;
    font-weight: normal;
    margin-bottom: 0;
    min-height: $line-height-computed;
    padding-left: 20px;
  }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  margin-left: -20px;
  margin-top: 4px \9;
  position: absolute;
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px;
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  cursor: pointer;
  display: inline-block;
  font-weight: normal;
  margin-bottom: 0;
  padding-left: 20px;
  position: relative;
  vertical-align: middle;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-left: 10px;
  margin-top: 0;
}

// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}
// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline {
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}
// These classes are used on elements with <label> descendants
.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: $cursor-disabled;
    }
  }
}

// Special

.has-feedback {
  // Enable absolute positioning
  position: relative;

  // Ensure icons don't overlap text
  .form-control {
    padding-right: ($input-height-base * 1.25);
  }
}
// Feedback icon (requires .glyphicon classes)
.form-control-feedback {
  display: block;
  height: $input-height-base;
  line-height: $input-height-base;
  pointer-events: none;
  position: absolute;
  right: 0;
  text-align: center;
  top: 0;
  width: $input-height-base;
  z-index: 2; // Ensure icon is above input groups
}
.input-lg + .form-control-feedback,
.input-group-lg + .form-control-feedback,
.form-group-lg .form-control + .form-control-feedback {
  height: $input-height-large;
  line-height: $input-height-large;
  width: $input-height-large;
}
.input-sm + .form-control-feedback,
.input-group-sm + .form-control-feedback,
.form-group-sm .form-control + .form-control-feedback {
  height: $input-height-small;
  line-height: $input-height-small;
  width: $input-height-small;
}

.has-success {
  @include form-control-validation($state-success-text, $state-success-text, $state-success-bg);
}
.has-warning {
  @include form-control-validation($state-warning-text, $state-warning-text, $state-warning-bg);
}
.has-error {
  @include form-control-validation($state-danger-text, $state-danger-text, $state-danger-bg);
}

// Reposition feedback icon if input has visible label above
.has-feedback label {

  & ~ .form-control-feedback {
    top: ($line-height-computed + 5); // Height of the `label` and its margin
  }
  &.sr-only ~ .form-control-feedback {
    top: 0;
  }
}
