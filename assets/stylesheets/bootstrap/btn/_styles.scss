@import "bootstrap/base/cursor/variables";
@import "bootstrap/base/font-size/variables";
@import "bootstrap/base/line-height/variables";
@import "bootstrap/base/padding/variables";
@import "bootstrap/caret/variables";
@import "bootstrap/link/variables";
@import "variables";
@import "mixins";
@import "bootstrap/base/mixins/opacity";

// Component

.btn {
  @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base);
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid transparent;
  cursor: pointer;
  display: inline-block;
  font-weight: $btn-font-weight;
  line-height: $line-height-computed;
  margin-bottom: 0; // For input.btn
  text-align: center;
  touch-action: manipulation;
  user-select: none;
  vertical-align: middle;
  white-space: nowrap;
}

// Elements

// Reposition the caret
.btn {
  .caret {
    margin-left: 0;
  }
}

// Modificators

.btn {
  &:hover {
    color: $btn-default-color;
    text-decoration: none;
  }

  &:active,
  &.active {
    background-image: none;
    box-shadow: inset 0 3px 5px rgba(0,0,0,.125);
  }

  &.disabled,
  &[disabled] {
    @include opacity(.65);
    box-shadow: none;
    cursor: $cursor-disabled;
  }
}

a.btn.disabled {
  pointer-events: none;
}

.btn-default {
  @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
}
.btn-primary {
  @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
}
.btn-success {
  @include button-variant($btn-success-color, $btn-success-bg, $btn-success-border);
}
.btn-info {
  @include button-variant($btn-info-color, $btn-info-bg, $btn-info-border);
}
.btn-warning {
  @include button-variant($btn-warning-color, $btn-warning-bg, $btn-warning-border);
}
.btn-danger {
  @include button-variant($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}

.btn-link {
  border-radius: 0;
  color: $link-color;
  font-weight: normal;

  &,
  &:active,
  &.active,
  &[disabled] {
    background-color: transparent;
    box-shadow: none;
  }

  &,
  &:hover,
  &:active {
    border-color: transparent;
  }

  &:hover {
    background-color: transparent;
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &[disabled] {
    &:hover {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  @include button-size($padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $btn-border-radius-large);

  .caret {
    border-width: $caret-width-large $caret-width-large 0;
    border-bottom-width: 0;
  }
}

.btn-sm {
  // line-height: ensure proper height of button next to small input
  @include button-size($padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}

.btn-xs {
  @include button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small, $line-height-small, $btn-border-radius-small);
}

.btn-block {
  display: block;
  width: 100%;
}

.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

// Parents

fieldset[disabled] {
  .btn {
    @include opacity(.65);
    box-shadow: none;
    cursor: $cursor-disabled;
  }

  a.btn {
    pointer-events: none;
  }

  .btn-link {
    background-color: transparent;
    box-shadow: none;

    &:hover {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}
